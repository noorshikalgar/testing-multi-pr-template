name: PR Template Handler

on:
  pull_request:
    types: [opened, edited, synchronize]  # Only run on these PR events

jobs:
  check-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Check If PR Title or Description Was Edited
        id: check_changes
        run: |
          ACTION=$(jq --raw-output .action "$GITHUB_EVENT_PATH")
          TITLE_CHANGED=$(jq --raw-output .changes.title // empty "$GITHUB_EVENT_PATH")
          BODY_CHANGED=$(jq --raw-output .changes.body // empty "$GITHUB_EVENT_PATH")

          if [[ "$ACTION" == "edited" && -z "$TITLE_CHANGED" && -z "$BODY_CHANGED" ]]; then
            echo "Skipping workflow, no relevant changes."
            exit 0
          fi

      - name: Get PR Details (Number, Target Branch, Body)
        id: get_pr
        run: |
          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          TARGET_BRANCH=$(jq --raw-output .pull_request.base.ref "$GITHUB_EVENT_PATH")
          PR_BODY=$(jq --raw-output .pull_request.body "$GITHUB_EVENT_PATH")

          # Convert "null" to an empty string
          if [[ "$PR_BODY" == "null" ]]; then
            PR_BODY=""
          fi

          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          echo "TARGET_BRANCH=$TARGET_BRANCH" >> $GITHUB_ENV

          # Save PR_BODY to a file to handle multi-line content safely
          echo "$PR_BODY" > pr_body.txt

      - name: Set PR Template if Target Branch Matches & PR Body is Empty
        if: contains(env.TARGET_BRANCH, 'ui/web/release')
        run: |
          if [[ ! -s pr_body.txt ]]; then  # Check if pr_body.txt is empty
            PR_TEMPLATE=$(cat .github/PULL_REQUEST_TEMPLATE/project-one-template.md)
            gh pr edit $PR_NUMBER --body "$PR_TEMPLATE"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Success Message
        if: always()
        run: echo "Workflow completed successfully ðŸŽ‰"
